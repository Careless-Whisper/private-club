  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar, "password_digest" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "remember_digest" varchar, "first_name" varchar, "last_name" varchar)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_users_on_email" ON "users" ("email")[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20180806144442)[0m
  [1m[35m (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180802132016),
(20180803010455),
(20180802132128);

[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "test"], ["created_at", "2018-08-06 16:25:18.029696"], ["updated_at", "2018-08-06 16:25:18.029696"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mFixture Delete (0.4ms)[0m  [1m[31mDELETE FROM "users"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at", "id") VALUES ('MyString', 'MyString', '2018-08-06 16:25:18.108147', '2018-08-06 16:25:18.108147', 980190962)[0m
  [1m[36mFixture Insert (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at", "id") VALUES ('MyString', 'MyString', '2018-08-06 16:25:18.108147', '2018-08-06 16:25:18.108147', 298486374)[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mFixture Delete (0.8ms)[0m  [1m[31mDELETE FROM "users"[0m
  [1m[36mFixture Insert (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at", "id") VALUES ('MyString', 'MyString', '2018-08-06 16:26:39.320645', '2018-08-06 16:26:39.320645', 980190962)[0m
  [1m[36mFixture Insert (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at", "id") VALUES ('MyString', 'MyString', '2018-08-06 16:26:39.320645', '2018-08-06 16:26:39.320645', 298486374)[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mFixture Delete (0.9ms)[0m  [1m[31mDELETE FROM "users"[0m
  [1m[36mFixture Insert (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at", "id") VALUES ('MyString', 'MyString', '2018-08-06 16:31:30.524525', '2018-08-06 16:31:30.524525', 980190962)[0m
  [1m[36mFixture Insert (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at", "id") VALUES ('MyString', 'MyString', '2018-08-06 16:31:30.524525', '2018-08-06 16:31:30.524525', 298486374)[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mFixture Delete (0.4ms)[0m  [1m[31mDELETE FROM "users"[0m
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------
UserTest: test_should_be_valid
------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mFixture Delete (0.8ms)[0m  [1m[31mDELETE FROM "users"[0m
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------
UserTest: test_should_be_valid
------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mFixture Delete (0.9ms)[0m  [1m[31mDELETE FROM "users"[0m
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------
UserTest: test_should_be_valid
------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mFixture Delete (0.8ms)[0m  [1m[31mDELETE FROM "users"[0m
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
UserTest: test_first_name_should_be_present
-------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
UserTest: test_first_name_should_not_contain_space
--------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------
UserTest: test_should_be_unique
-------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------
UserTest: test_should_be_valid
------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mFixture Delete (0.8ms)[0m  [1m[31mDELETE FROM "users"[0m
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------
UserTest: test_should_be_unique
-------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------
UserTest: test_should_be_valid
------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
UserTest: test_first_name_should_be_present
-------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
UserTest: test_first_name_should_not_contain_space
--------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mFixture Delete (1.2ms)[0m  [1m[31mDELETE FROM "users"[0m
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
UserTest: test_first_name_should_be_present
-------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------
UserTest: test_should_be_valid
------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
UserTest: test_first_name_should_not_contain_space
--------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------
UserTest: test_should_be_unique
-------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[36mUser Create (0.9ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at", "first_name", "last_name") VALUES (?, ?, ?, ?, ?, ?)[0m  [["email", "user@example.com"], ["password_digest", "$2a$04$6EtcqqKr2sCGHuEeD8Y3buMYvgg./dxC9wgLAaF2KW68EBnmcDSSe"], ["created_at", "2018-08-06 17:11:48.239376"], ["updated_at", "2018-08-06 17:11:48.239376"], ["first_name", "Example User"], ["last_name", "gzprgkr"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "user@example.com"], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
